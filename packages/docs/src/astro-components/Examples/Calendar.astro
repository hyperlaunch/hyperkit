---
type Props = {
  for?: string;
  value?: string;
  minDate?: string;
  maxDate?: string;
  futureOnly?: boolean;
  pastOnly?: boolean;
  includeEventListenerExample?: boolean;
};

const {
  for: forElement,
  minDate,
  maxDate,
  futureOnly,
  pastOnly,
  value,
  includeEventListenerExample,
} = Astro.props;
---

<hyperkit-calendar
  class="w-72 bg-white rounded-lg shadow-lg p-4 block"
  min-date={minDate}
  max-date={maxDate}
  future-only={futureOnly}
  past-only={pastOnly}
  for={forElement}
  value={value}
  id={includeEventListenerExample && "my-calendar"}
>
  <div class="flex justify-between items-center mb-4">
    <h7-previous-month>
      <button class="text-zinc-600 hover:text-zinc-800 text-xl">&lt;</button>
    </h7-previous-month>
    <h7-current-month class="text-xl font-bold text-zinc-800"></h7-current-month>
    <h7-next-month>
      <button class="text-zinc-600 hover:text-zinc-800 text-xl">&gt;</button>
    </h7-next-month>
  </div>

  <div class="grid grid-cols-7 gap-1 mb-2">
    <div class="text-center text-xs font-semibold text-zinc-600">M</div>
    <div class="text-center text-xs font-semibold text-zinc-600">T</div>
    <div class="text-center text-xs font-semibold text-zinc-600">W</div>
    <div class="text-center text-xs font-semibold text-zinc-600">T</div>
    <div class="text-center text-xs font-semibold text-zinc-600">F</div>
    <div class="text-center text-xs font-semibold text-zinc-600">S</div>
    <div class="text-center text-xs font-semibold text-zinc-600">S</div>
  </div>

  <h7-days-list class="grid grid-cols-7 gap-1"></h7-days-list>
  <button
    slot="day-number"
    class="w-8 h-8 flex items-center justify-center rounded-full cursor-pointer text-xs hover:bg-zinc-100 focus:ring-1 focus:ring-lime-500 focus:bg-lime-200 transition-colors duration-200 data-[today]:bg-lime-600 text-zinc-800 data-[today]:text-white data-[selected]:bg-lime-200 data-[other-month]:text-zinc-400 disabled:text-zinc-400"
  ></button>
</hyperkit-calendar>

<script>
  import "@hyperkit/elements/calendar.ts";
</script>

{includeEventListenerExample && <script>
    document.addEventListener("DOMContentLoaded", () => {
      document
        .querySelector("#my-calendar")
        ?.addEventListener("change", (event) =>
          // @ts-ignore
          alert(`New value: ${(event.detail).newValue}`),
        );
    });
  </script>}
