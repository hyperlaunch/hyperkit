---
type Props = { accordion?: boolean; useTransition?: boolean };

const { accordion = false, useTransition = false } = Astro.props;

const items = ["First", "Second", "Third"];
---

<hyperkit-disclosure
  accordion={accordion}
  class="w-96 bg-white rounded-lg shadow-lg p-4"
>
  {
    items.map((item, i) => (
      <hk-disclosure-item class="mb-4 pb-4 border-b border-b-zinc-200 last:mb-0 last:pb-0 last:border-0 block">
        <hk-disclosure-trigger>
          <button class="w-full flex justify-between items-center text-left text-sm font-bold text-zinc-700 data-[visible]:text-zinc-900 hover:text-zinc-600 focus:outline-none transition-colors duration-200">
            {item} Item
          </button>
        </hk-disclosure-trigger>
        <hk-disclosure-content
          hidden={i > 0}
          class="mt-2 text-xs text-zinc-600"
        >
          {useTransition ? (
            <hyperkit-transition
              class="block"
              enter-class="transition-all duration-500 ease-in origin-top"
              enter-from-class="opacity-0 max-h-0"
              enter-to-class="opacity-100 max-h-[1000px]"
              exit-class="transition-all duration-300 ease-out"
              exit-from-class="opacity-100 max-h-[1000px]"
              exit-to-class="opacity-0 max-h-0"
            >
              This is some example content for the disclosure item.
            </hyperkit-transition>
          ) : (
            <>This is some example content for the disclosure item.</>
          )}
        </hk-disclosure-content>
      </hk-disclosure-item>
    ))
  }
</hyperkit-disclosure>

<script>
  import "@hyperkit/elements/disclosure.ts";
  import "@hyperkit/elements/transition.ts";
</script>
