---
name: Disclosure
tagline: A flexible disclosure element for showing or hiding content, with optional accordion mode and smooth transition animations.
---

The `<hyperkit-disclosure />` element provides a convenient way to show or hide content items, similar to an accordion or an expandable list. It allows for flexible configuration, including animations for smooth transitions. The `accordion` attribute ensures that only one item is open at a time, making it ideal for use cases where content sections need to be displayed sequentially.

{% example hero=true %}{% disclosure / %}{% /example %}

## Usage

Import the JS:
```js
import "@hyperkit/elements/disclosure";
```

Tag:
```html
<hyperkit-disclosure>…</hyperkit-disclosure>
```

### Options

{% table %}
* Attribute
* Value
* 
---
* `accordion`
* Boolean _(optional)_
* Only one disclosure item can be visible at a time if this attribute is set. No more than one `<hk-disclosure-item>` should omit the `hidden` attribute initially.
---
{% /table %}

### Children

```html
<hyperkit-disclosure>
  <hk-disclosure-item>
    <hk-disclosure-trigger><button /></hk-disclosure-trigger>
    <hk-disclosure-content />
  </hk-disclosure-item>
</hyperkit-disclosure>
```

#### `<hk-disclosure-item />`
* Represents an expandable content section.
* Must include both `<hk-disclosure-trigger />` and `<hk-disclosure-content />`.

#### `<hk-disclosure-trigger />`
* Acts as the trigger for expanding or collapsing the disclosure content.
* Must contain a `<button />` for accessibility.

#### `<hk-disclosure-content />`
* Holds the content that will be shown or hidden.
* By default, it should be visible unless explicitly given the `hidden` attribute.

## JavaScript API

The `hyperkit-disclosure` element provides a simple JavaScript API to interact with the disclosure items and listen for changes in visibility.

### Showing or Hiding Disclosure Items

The `hyperkit-disclosure` element exposes `show()` and `hide()` methods that take the `<hk-disclosure-item>` as an argument to programmatically control its visibility.

#### Example Usage

```js
const disclosure = document.querySelector("hyperkit-disclosure");
const item = disclosure.querySelector("hk-disclosure-item");

// Show the item
disclosure.show(item);

// Hide the item
disclosure.hide(item);
```

### Listening for Visibility Changes

The `<hk-disclosure-item>` emits a `change` event whenever its visibility changes. The event detail contains information about whether the item is currently visible.

```js
item.addEventListener("change", (event) => {
  console.log("Disclosure item is now", event.detail.visible ? "visible" : "hidden");
});
```


## Examples

### Styling

All elements can be styled conventionally with classes. The button inside `<hk-disclosure-trigger>` can be styled to indicate its state. The trigger button also receives a `data-visible` attribute when the corresponding disclosure item is visible.

#### Example of a Styled Disclosure

{% example %}{% disclosure / %}{% /example %}

```html
<hyperkit-disclosure
  class="w-96 bg-white rounded-lg shadow-lg p-4"
>
  <hk-disclosure-item class="mb-4 pb-4 border-b border-b-zinc-200 last:mb-0 last:border-0 block">
    <hk-disclosure-trigger>
      <button class="w-full flex justify-between items-center text-left text-sm font-bold text-zinc-700 data-[visible]:text-zinc-900 hover:text-zinc-600 focus:outline-none transition-colors duration-200">
        Item Title
      </button>
    </hk-disclosure-trigger>
    <hk-disclosure-content class="mt-2 text-xs text-zinc-600">
      This is some example content for the disclosure item.
    </hk-disclosure-content>
  </hk-disclosure-item>
</hyperkit-disclosure>
```

### Adding a Transition

You can use a `<hyperkit-transition />` element to animate the visibility state of the disclosure content. The following example demonstrates how to create a sliding transition effect. In this example, `accordion` mode is also enabled, so only one disclosure item can be visible at a time.

{% example %}{% disclosure useTransition=true accordion=true / %}{% /example %}

```html
<hyperkit-disclosure accordion>
  <hk-disclosure-item>
    …
    <hk-disclosure-content>
      <hyperkit-transition
        class="block"
        enter-class="transition-all duration-500 ease-in origin-top"
        enter-from-class="opacity-0 max-h-0"
        enter-to-class="opacity-100 max-h-[1000px]"
        exit-class="transition-all duration-300 ease-out"
        exit-from-class="opacity-100 max-h-[1000px]"
        exit-to-class="opacity-0 max-h-0"
      >
        …
      </hyperkit-transition>
    </hk-disclosure-content>
  </hk-disclosure-item>
</hyperkit-disclosure>
```

### Accordion Mode

The `accordion` attribute ensures that only one disclosure item is visible at a time. When enabled, if one item is expanded, any other open item will automatically be collapsed. To ensure consistent behaviour, no more than one `<hk-disclosure-item>` should omit the `hidden` attribute initially if `accordion` mode is enabled.

{% example %}{% disclosure accordion=true / %}{% /example %}

```html
<hyperkit-disclosure accordion>
  …
</hyperkit-disclosure>
```
