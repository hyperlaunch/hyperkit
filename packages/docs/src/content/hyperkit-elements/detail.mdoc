---
name: Detail & Accordion
tagline: Detail and Accordion elements that can be used together for expandable content, with optional accordion functionality and smooth transitions.
---

The `<hyperkit-accordion />` element allows you to create an accordion where only one section can be open at a time, while the `<hyperkit-detail />` element can be used independently or within an accordion for expandable sections. Both elements support smooth transitions and custom styling.

{% example hero=true %}{% detail / %}{% /example %}

## Usage

Import the JS:

```js
import "@hyperkit/elements/detail";
```

Tags:

```html
<hyperkit-accordion>…</hyperkit-accordion>
<hyperkit-detail>…</hyperkit-detail>
```


### `<hyperkit-detail />` Options

{% table %}
* Attribute
* Value
* 
---
* `hidden`
* Boolean _(optional)_
* If set, the detail content is hidden by default. Can be toggled programmatically.
---
{% /table %}

### `<hyperkit-accordion />` Options

There are no specific options for `<hyperkit-accordion />`. It automatically manages the visibility of nested `<hyperkit-detail />` elements, ensuring only one is open at a time.

## Children

```html
<!-- Standalone Detail -->
<hyperkit-detail>
  <h7-detail-trigger><button /></h7-detail-trigger>
  <h7-detail-content />
</hyperkit-detail>

<!-- Accordion with Multiple Details -->
<hyperkit-accordion>
  <hyperkit-detail>
    <h7-detail-trigger><button /></h7-detail-trigger>
    <h7-detail-content />
  </hyperkit-detail>
  <hyperkit-detail>
    <h7-detail-trigger><button /></h7-detail-trigger>
    <h7-detail-content />
  </hyperkit-detail>
</hyperkit-accordion>
```

#### `<h7-detail-trigger />`

* Acts as the trigger for expanding or collapsing the detail content.
* Must contain a `<button />` for accessibility.

#### `<h7-detail-content />`

* Holds the content that will be shown or hidden.
* Hidden by default unless explicitly set to visible or controlled programmatically.

## JavaScript API

The `hyperkit-detail` element provides a simple JavaScript API to interact with its visibility. There is no JavaScript API for `hyperkit-accordion`.

### Showing or Hiding Details

The `hyperkit-detail` exposes `show()` and `hide()` methods to control visibility.

#### Example Usage

```js
const detail = document.querySelector("hyperkit-detail");

// Show the detail
detail.show();

// Hide the detail
detail.hide();
```

### Listening for Visibility Changes

The `hyperkit-detail` emits `open` and `close` events that you can listen for using the `on` method. This is triggered when the visibility of the detail changes.

```js
detail.on("show", () => {
  console.log("Detail is now open");
});

detail.on("hide", () => {
  console.log("Detail is now closed");
});
```

## Examples

### Styling the Details

You can apply custom styles to both the details and their triggers. The button inside `<h7-detail-trigger>` can be styled to indicate its open state. The trigger button also receives a `data-visible` attribute when the corresponding detail is visible.

#### Example of a Styled Detail

{% example %}{% detail / %}{% /example %}

```html
<hyperkit-detail class="w-96 bg-white rounded-lg shadow-lg p-4">
  <h7-detail-trigger>
    <button class="w-full flex justify-between items-center text-left text-sm font-bold text-zinc-700 data-[visible]:text-zinc-900 hover:text-zinc-600 transition-colors duration-200">
      Section Title
    </button>
  </h7-detail-trigger>
  <h7-detail-content class="mt-2 text-xs text-zinc-600">
    This is some example content for the detail.
  </h7-detail-content>
</hyperkit-detail>
```

### Using Transitions

{% example %}{% detail useTransition=true / %}{% /example %}

To animate the visibility of the detail, use the `<hyperkit-transition />` element for smooth show/hide effects.

```html
<hyperkit-detail>
  <h7-detail-trigger><button /></h7-detail-trigger>
  <h7-detail-content>
    <hyperkit-transition
      class="block"
      enter-class="transition-all duration-500 ease-in"
      enter-from-class="opacity-0 max-h-0"
      enter-to-class="opacity-100 max-h-[1000px]"
      exit-class="transition-all duration-300 ease-out"
      exit-from-class="opacity-100 max-h-[1000px]"
      exit-to-class="opacity-0 max-h-0"
    >
      …
    </hyperkit-transition>
  </h7-detail-content>
</hyperkit-detail>
```

### Accordion Mode

{% example %}{% accordion / %}{% /example %}

When used inside `<hyperkit-accordion>`, only one detail can be open at a time. The accordion automatically manages the visibility of the details.

```html
<hyperkit-accordion>
  <hyperkit-detail>…</hyperkit-detail>
</hyperkit-accordion>
```
