---
import { Picture } from "astro:assets";
import darkRocket from "../assets/rockets/dark.png";
import lightRocket from "../assets/rockets/light.png";
import Layout from "../astro-components/Layout.astro";
import { getComponentTree } from "../utils/component-tree";

const tree = await getComponentTree();
---

<Layout>
  <div class="flex flex-col items-center justify-end relative">
    <Picture
      src={lightRocket}
      format="webp"
      alt=""
      class="w-full max-w-5xl dark:hidden"
      widths={[375, 750, 1200, 1500]}
    />
    <Picture
      src={darkRocket}
      format="webp"
      alt=""
      class="w-full max-w-5xl hidden dark:block"
      widths={[375, 750, 1200, 1500]}
    />
    <div class="lg:absolute z-40">
      <div
        class="max-w-5xl mx-auto text-black dark:text-white [text-shadow:_0_1px_30px_rgb(255_255_255/_100%)]
lg:[text-shadow:_0_1px_50px_rgb(255_255_255/_100%)] dark:[text-shadow:_0_1px_30px_rgb(0_0_0_/_100%)] dark:lg:[text-shadow:_0_1px_50px_rgb(0_0_0_/_100%)]"
      >
        <h1
          class="text-3xl sm:text-5xl md:text-6xl lg:text-7xl xl:text-8xl font-black mb-4 lg:mb-6 xl:mb-8"
        >
          Headless Elements, Supercharged Sites
        </h1>
        <p class="md:text-lg lg:text-xl xl:text-2xl">
          A suite of unstyled custom elements designed for building rich,
          interactive UIs rapidly &mdash; without writing JavaScript. From
          sortable lists to calendars, modals, and repeating forms, Hyperkit
          let's you create dynamic, scalable interfaces, with pure HTML &amp;
          CSS.
        </p>
      </div>
    </div>
  </div>
  <hyperkit-copyable value="bun add @hyperkitxyz/elements">
    <button
      class="group flex items-center gap-x-2 bg-zinc-950 dark:bg-white border border-zinc-700 dark:border-zinc-400 rounded shadow-md px-4 py-2 mr-auto lg:mx-auto white-space-no-wrap text-zinc-100 dark:text-zinc-950 text-sm lg:text-base font-medium"
    >
      bun add @hyperkitxyz/elements
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="size-5 group-data-[copied]:hidden"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 0 1-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 0 1 1.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 0 0-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 0 1-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 0 0-3.375-3.375h-1.5a1.125 1.125 0 0 1-1.125-1.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H9.75"
        ></path>
      </svg>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="size-5 hidden group-data-[copied]:block"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="m4.5 12.75 6 6 9-13.5"></path>
      </svg>
    </button>
  </hyperkit-copyable>
  <div class="flex items-center justify-center w-full max-w-3xl">
    <div class="relative flex items-center w-full max-w-screen-lg">
      <div
        class="flex-grow h-px bg-gradient-to-r from-transparent via-zinc-200 to-zinc-200 dark:via-zinc-700 dark:to-zinc-700"
      >
      </div>
      <h2
        class="mx-4 text-xs uppercase font-semibold tracking-wider text-lime-500 dark:text-lime-400"
      >
        Components
      </h2>
      <div
        class="flex-grow h-px bg-gradient-to-l from-transparent via-zinc-200 to-zinc-200 dark:via-zinc-700 dark:to-zinc-700"
      >
      </div>
    </div>
  </div>
  <nav class="flex flex-col gap-2 lg:gap-4 xl:gap-6 2xl:gap-4 w-full max-w-7xl">
    {
      tree.map(({ name, items }, i) => (
        <>
          <hyperkit-detail-summoner summons={`component-grid-${i}`}>
            <button class="block w-full flex items-center justify-between text-left px-4 py-2 lg:px-6 bg-zinc-200 dark:bg-zinc-800 rounded font-bold group">
              {name}
              <span class="group-data-[active]:rotate-180 transition-rotate duration-300">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="size-5"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="m4.5 15.75 7.5-7.5 7.5 7.5"
                  />
                </svg>
              </span>
            </button>
          </hyperkit-detail-summoner>
          <hyperkit-detail id={`component-grid-${i}`}>
            <hyperkit-transition
              class="grid gap-2 lg:gap-4 xl:gap-6 2xl:gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-3"
              enter-class="transition-all duration-500 ease-in"
              enter-from-class="opacity-0 max-h-0"
              enter-to-class="opacity-100 max-h-[1000px]"
              exit-class="transition-all duration-300 ease-out"
              exit-from-class="opacity-100 max-h-[1000px]"
              exit-to-class="opacity-0 max-h-0"
            >
              {items.map((item) => (
                <a
                  href={`/${item?.slug}`}
                  class="group border border-zinc-200 dark:border-zinc-800 rounded overflow-hidden hover:bg-zinc-50 dark:hover:bg-zinc-900 transition-color duration-300"
                >
                  <div class="p-4 lg:p-6 xl:p-8">
                    <h3 class="lg:text-lg xl:text-xl font-semibold text-zinc-900 dark:text-zinc-100 group-hover:text-lime-500 dark:group-hover:text-lime-400 mb-2">
                      {item?.data.name}
                    </h3>
                    <p class="text-zinc-600 dark:text-zinc-300 group-hover:text-zinc-900 dark:group-hover:text-zinc-100">
                      {item?.data.tagline}
                    </p>
                  </div>
                </a>
              ))}
            </hyperkit-transition>
          </hyperkit-detail>
        </>
      ))
    }
  </nav>
</Layout>
<script>
  import "@hyperkitxyz/elements/detail.ts";
  import "@hyperkitxyz/elements/copyable.ts";
</script>
